{"version":3,"sources":["components/TodoList/TodoItem/TodoItem.module.css","components/TodoList/TodoFooter/TodoFooter.module.css","components/TodoList/UserInput/UserInput.module.css","components/TodoList/TodoList.module.css","components/TodoList/TodoItems/TodoItems.module.css","components/TodoList/TodoItem/TodoItem.jsx","components/TodoList/TodoFooter/TodoFooter.jsx","components/TodoList/TodoItems/TodoItems.jsx","components/TodoList/UserInput/UserInput.jsx","img/plus.svg","components/TodoList/TodoList.jsx","App.js","reportWebVitals.js","index.js"],"names":["module","exports","TodoItem","props","useState","isEdit","newTaskText","task","taskEdit","setTaskEdit","toggleEditMode","className","s","todoItem","completeBtn","taskComplete","onClick","editTask","id","version","xmlns","x","y","width","height","viewBox","d","input","placeholder","type","value","onChange","e","target","deleteBtn","transform","opacity","isComplete","completeTask","cx","cy","r","onTaskComplete","editBtn","deleteTask","TodoFooter","onChangeRadioBtn","setRadio","todoFooter","count","itemsLeft","form_radio","form_radio_btn","name","checked","radio","htmlFor","clearWrap","clear","deleteCompleted","TodoItems","createItem","item","todoItemsArray","todoItems","map","filter","createItemsArray","length","UserInput","userInput","setUserInput","submitBtn","addNewTodo","TodoList","todos","setTodos","todoListWrapper","todoList","newItem","Math","random","toString","substr","newText","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c849c77a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"todoItem\":\"TodoItem_todoItem__3oRhU\",\"deleteBtn\":\"TodoItem_deleteBtn__2zCqW\",\"editBtn\":\"TodoItem_editBtn__yhehg\",\"completeBtn\":\"TodoItem_completeBtn__8_rX1\",\"taskComplete\":\"TodoItem_taskComplete__2aKmB\",\"task\":\"TodoItem_task__3wWJe\",\"onTaskComplete\":\"TodoItem_onTaskComplete__1u1Lx\",\"input\":\"TodoItem_input__3hUZJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"todoFooter\":\"TodoFooter_todoFooter__2I5lW\",\"count\":\"TodoFooter_count__lCNi2\",\"form_radio\":\"TodoFooter_form_radio__2awEe\",\"form_radio_btn\":\"TodoFooter_form_radio_btn__rWx77\",\"clearWrap\":\"TodoFooter_clearWrap__3o-xZ\",\"clear\":\"TodoFooter_clear__3lwse\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userInput\":\"UserInput_userInput__3VzDI\",\"input\":\"UserInput_input__3JTe_\",\"submitBtn\":\"UserInput_submitBtn__31pOl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"todoListWrapper\":\"TodoList_todoListWrapper__3E815\",\"todoList\":\"TodoList_todoList__1NaVB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"todoItems\":\"TodoItems_todoItems__2qtgb\"};","import React, {useState} from 'react'\r\nimport s from \"./TodoItem.module.css\"\r\n\r\nconst TodoItem = (props) => {\r\n\r\n    let [taskEdit, setTaskEdit] = useState({\r\n        isEdit: false,\r\n        newTaskText: props.task\r\n    })\r\n\r\n    const handleChange = (e) => {\r\n        setTaskEdit({...taskEdit, newTaskText: e.target.value})\r\n    }\r\n\r\n    const toggleEditMode = () => {\r\n        taskEdit.isEdit\r\n            ? setTaskEdit({...taskEdit, isEdit: false})\r\n            : setTaskEdit({...taskEdit, isEdit: true})\r\n    }\r\n\r\n    if(taskEdit.isEdit) {\r\n        return (\r\n            <div className={s.todoItem}>\r\n                <button className={`${s.completeBtn} ${s.taskComplete}`} onClick={ () => {\r\n                    props.editTask(props.id, taskEdit.newTaskText)\r\n                    toggleEditMode() }}>\r\n                    <svg version=\"1.1\" id=\"Capa_1\" xmlns=\"http://www.w3.org/2000/svg\" x=\"0px\" y=\"0px\"\r\n                         width=\"405.272px\" height=\"405.272px\" viewBox=\"0 0 405.272 405.272\" enable-background=\"new 0 0 405.272 405.272;\">\r\n                        <g>\r\n                            <path d=\"M393.401,124.425L179.603,338.208c-15.832,15.835-41.514,15.835-57.361,0L11.878,227.836\r\n                                c-15.838-15.835-15.838-41.52,0-57.358c15.841-15.841,41.521-15.841,57.355-0.006l81.698,81.699L336.037,67.064\r\n                                c15.841-15.841,41.523-15.829,57.358,0C409.23,82.902,409.23,108.578,393.401,124.425z\"/>\r\n                        </g>\r\n                    </svg>\r\n\r\n                </button>\r\n                <input className={s.input} placeholder='Create a new todo...' type='text' value={taskEdit.newTaskText} onChange={handleChange} />\r\n                <button className={s.deleteBtn} onClick={() => {\r\n                    setTaskEdit({...taskEdit, newTaskText: ''})\r\n                }}>\r\n                    <svg width=\"24px\" height=\"24px\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                        <g>\r\n                            <g>\r\n                                <rect width=\"24\" height=\"24\" transform=\"rotate(180 12 12)\" opacity=\"0\"/>\r\n                                <path\r\n                                    d=\"M13.41 12l4.3-4.29a1 1 0 1 0-1.42-1.42L12 10.59l-4.29-4.3a1 1 0 0 0-1.42 1.42l4.3 4.29-4.3 4.29a1 1 0 0 0 0 1.42 1 1 0 0 0 1.42 0l4.29-4.3 4.29 4.3a1 1 0 0 0 1.42 0 1 1 0 0 0 0-1.42z\"/>\r\n                            </g>\r\n                        </g>\r\n                    </svg>\r\n                </button>\r\n            </div>\r\n        )\r\n    } else {\r\n        return (\r\n            <div className={s.todoItem}>\r\n                <button className={`${s.completeBtn} ${props.isComplete ? s.taskComplete : ''}`} onClick={ () => { props.completeTask(props.id) }}>\r\n                    <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" x=\"0px\" y=\"0px\"\r\n                         width=\"120px\" height=\"120px\" viewBox=\"0 0 120 120\" enable-background=\"new 0 0 120 120\">\r\n                        <circle cx=\"60\" cy=\"60.834\" r=\"54.167\"/>\r\n                    </svg>\r\n                </button>\r\n                <div className={`${s.task} ${props.isComplete ? s.onTaskComplete : ''}`}>{props.task}</div>\r\n                <button className={s.editBtn} onClick={() => {\r\n                    toggleEditMode()\r\n                }}>\r\n                    <svg version=\"1.1\" id=\"Layer_1\" xmlns=\"http://www.w3.org/2000/svg\" x=\"0px\" y=\"0px\"\r\n                         viewBox=\"0 0 330 330\" enable-background=\"new 0 0 330 330\">\r\n                        <g id=\"XMLID_23_\">\r\n                            <path id=\"XMLID_24_\" d=\"M75,180v60c0,8.284,6.716,15,15,15h60c3.978,0,7.793-1.581,10.606-4.394l164.999-165\r\n                            c5.858-5.858,5.858-15.355,0-21.213l-60-60C262.794,1.581,258.978,0,255,0s-7.794,1.581-10.606,4.394l-165,165\r\n                            C76.58,172.206,75,176.022,75,180z M105,186.213L255,36.213L293.787,75l-150,150H105V186.213z\"/>\r\n                            <path id=\"XMLID_27_\" d=\"M315,150.001c-8.284,0-15,6.716-15,15V300H30V30H165c8.284,0,15-6.716,15-15s-6.716-15-15-15H15\r\n                            C6.716,0,0,6.716,0,15v300c0,8.284,6.716,15,15,15h300c8.284,0,15-6.716,15-15V165.001C330,156.716,323.284,150.001,315,150.001z\"/>\r\n                        </g>\r\n                    </svg>\r\n                </button>\r\n                <button className={s.deleteBtn} onClick={() => {\r\n                    props.deleteTask(props.id)\r\n                }}>\r\n                    <svg width=\"24px\" height=\"24px\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                        <g>\r\n                            <g>\r\n                                <rect width=\"24\" height=\"24\" transform=\"rotate(180 12 12)\" opacity=\"0\"/>\r\n                                <path\r\n                                    d=\"M13.41 12l4.3-4.29a1 1 0 1 0-1.42-1.42L12 10.59l-4.29-4.3a1 1 0 0 0-1.42 1.42l4.3 4.29-4.3 4.29a1 1 0 0 0 0 1.42 1 1 0 0 0 1.42 0l4.29-4.3 4.29 4.3a1 1 0 0 0 1.42 0 1 1 0 0 0 0-1.42z\"/>\r\n                            </g>\r\n                        </g>\r\n                    </svg>\r\n                </button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TodoItem","import React, {useState} from 'react';\r\nimport s from './TodoFooter.module.css'\r\n\r\nconst TodoFooter = (props) => {\r\n\r\n\r\n    const onChangeRadioBtn = (value) => {\r\n        props.setRadio(value)\r\n    }\r\n\r\n    return (\r\n        <li className={s.todoFooter}>\r\n            <div className={s.count}>{props.itemsLeft} items left</div>\r\n            <div className={s.form_radio}>\r\n                <div className={s.form_radio_btn}>\r\n                    <input id=\"todoFooterAll\"\r\n                           name=\"radio\"\r\n                           type=\"radio\"\r\n                           value=\"all\"\r\n                           checked={props.radio === 'all'}\r\n                           onChange={ () => {onChangeRadioBtn('all')} }/>\r\n                    <label htmlFor=\"todoFooterAll\">All</label>\r\n                </div>\r\n                <div className={s.form_radio_btn}>\r\n                    <input id=\"todoFooterActive\"\r\n                           name=\"radio\"\r\n                           type=\"radio\"\r\n                           value=\"active\"\r\n                           checked={props.radio === 'active'}\r\n                           onChange={ () => {onChangeRadioBtn('active')} }/>\r\n                    <label htmlFor=\"todoFooterActive\">Active</label>\r\n                </div>\r\n                <div className={s.form_radio_btn}>\r\n                    <input id=\"todoFooterCompleted\"\r\n                           name=\"radio\"\r\n                           type=\"radio\"\r\n                           value=\"completed\"\r\n                           checked={props.radio === 'completed'}\r\n                           onChange={ () => {onChangeRadioBtn('completed')} }/>\r\n                    <label htmlFor=\"todoFooterCompleted\">Completed</label>\r\n                </div>\r\n            </div>\r\n            <div className={s.clearWrap}>\r\n                <button className={s.clear} onClick={ () => {props.deleteCompleted()} }>Clear Completed</button>\r\n            </div>\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default TodoFooter","import React, {useState} from 'react'\r\nimport TodoItem from \"../TodoItem/TodoItem\";\r\nimport s from \"./TodoItems.module.css\"\r\nimport TodoFooter from \"../TodoFooter/TodoFooter\";\r\n\r\nconst TodoItems = (props) => {\r\n\r\n    let [radio, setRadio] = useState('all')\r\n\r\n    // Create task (used in map)\r\n    const createItem = (item) => {\r\n        return (\r\n            <li key={item.id}>\r\n                <TodoItem task={item.task}\r\n                          id={item.id}\r\n                          isComplete={item.isComplete}\r\n                          deleteTask={props.deleteTask}\r\n                          completeTask={props.completeTask}\r\n                          editTask={props.editTask}/>\r\n            </li>\r\n        )\r\n    }\r\n\r\n    // Creates an array of items by category\r\n    const createItemsArray = (type) => {\r\n        switch (type) {\r\n            case 'all':\r\n                return props.todoItems.map(item => { return createItem(item)})\r\n            case 'active':\r\n                return props.todoItems.filter( item => !item.isComplete ).map(item => {return createItem(item)})\r\n            case 'completed':\r\n                return props.todoItems.filter( item => item.isComplete ).map(item => {return  createItem(item)})\r\n        }\r\n    }\r\n\r\n    let todoItemsArray = createItemsArray(radio)\r\n\r\n    return (\r\n        <ul className={s.todoItems}>\r\n            {todoItemsArray}\r\n            <TodoFooter itemsLeft={todoItemsArray.length}\r\n                        todoItemsArray={todoItemsArray}\r\n                        radio={radio}\r\n                        setRadio={setRadio}\r\n                        deleteCompleted={props.deleteCompleted}/>\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default TodoItems","import React, {useState} from 'react';\r\nimport s from './UserInput.module.css'\r\nimport plus from '../../../img/plus.svg'\r\n\r\nconst UserInput = (props) => {\r\n\r\n    let [userInput, setUserInput] = useState('')\r\n\r\n    // On UserInput change\r\n    const handleChange = (e) => {\r\n        setUserInput(e.target.value)\r\n    }\r\n\r\n    return (\r\n        <div className={s.userInput}>\r\n            <button className={s.submitBtn} onClick={() => {\r\n                props.addNewTodo(userInput)\r\n                setUserInput('')\r\n            }}>\r\n                <svg id=\"todoPlus\" xmlns=\"http://www.w3.org/2000/svg\" x=\"0px\" y=\"0px\"\r\n                     width=\"45.402px\" height=\"45.402px\" viewBox=\"0 0 45.402 45.402\">\r\n                    <g>\r\n                        <path d=\"M41.267,18.557H26.832V4.134C26.832,1.851,24.99,0,22.707,0c-2.283,0-4.124,1.851-4.124,4.135v14.432H4.141\r\n                            c-2.283,0-4.139,1.851-4.138,4.135c-0.001,1.141,0.46,2.187,1.207,2.934c0.748,0.749,1.78,1.222,2.92,1.222h14.453V41.27\r\n                            c0,1.142,0.453,2.176,1.201,2.922c0.748,0.748,1.777,1.211,2.919,1.211c2.282,0,4.129-1.851,4.129-4.133V26.857h14.435\r\n                            c2.283,0,4.134-1.867,4.133-4.15C45.399,20.425,43.548,18.557,41.267,18.557z\"/>\r\n                    </g>\r\n                </svg>\r\n            </button>\r\n            <input className={s.input} placeholder='Create a new todo...' type='text' value={userInput} onChange={handleChange}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserInput","export default __webpack_public_path__ + \"static/media/plus.3b76484d.svg\";","import React, {useState} from 'react';\r\nimport TodoItems from \"./TodoItems/TodoItems\";\r\nimport UserInput from \"./UserInput/UserInput\";\r\nimport s from \"./TodoList.module.css\";\r\n\r\nconst TodoList = (props) => {\r\n\r\n    let [todos, setTodos] = useState([])\r\n\r\n    // Add New Task\r\n    const addNewTodo = (userInput) => {\r\n        if(userInput) {\r\n            let newItem = {\r\n                id: Math.random().toString(36).substr(2,9),\r\n                task: userInput,\r\n                isComplete: false\r\n            }\r\n            setTodos([...todos, newItem])\r\n        }\r\n    }\r\n\r\n    // Delete Task\r\n    const deleteTask = (id) => {\r\n        setTodos([...todos.filter( item => item.id !== id )])\r\n    }\r\n\r\n    // Delete Completed\r\n    const deleteCompleted = () => {\r\n        setTodos([...todos.filter( item => !item.isComplete )])\r\n    }\r\n\r\n    // Edit Task\r\n    const editTask = (id, newText) => {\r\n        if(newText) {\r\n            setTodos([\r\n                ...todos.map( (item) => {\r\n                    return item.id === id ? { ...item, task: newText } : {...item}\r\n                })\r\n            ])\r\n        }\r\n    }\r\n\r\n    // Complete Task\r\n    const  completeTask = (id) => {\r\n        setTodos([\r\n            ...todos.map( (item) => {\r\n                return item.id === id ? { ...item, isComplete: !item.isComplete } : {...item}\r\n            })\r\n        ])\r\n    }\r\n\r\n    return (\r\n        <div className={s.todoListWrapper}>\r\n            <div className={s.todoList}>\r\n                <h1>Todo</h1>\r\n                <UserInput addNewTodo={addNewTodo} />\r\n                <TodoItems todoItems={todos}\r\n                           deleteTask={deleteTask}\r\n                           completeTask={completeTask}\r\n                           deleteCompleted={deleteCompleted}\r\n                           editTask={editTask}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TodoList","import React from 'react'\nimport './App.css';\nimport TodoList from \"./components/TodoList/TodoList\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <TodoList />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}